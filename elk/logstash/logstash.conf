input {
  # stdin {} # for debug

  tcp {
    port => 5044
    codec => json
    # tags => ["backend"]  # Had add in django
  }

  jdbc {
    jdbc_connection_string => "jdbc:postgresql://host.docker.internal:3210/listuser"
    jdbc_user => "postgres"
    jdbc_password => "postgres"
    jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.29.jre7.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    schedule => "* * * * *"  # Runs every minute; adjust as needed
    statement => "SELECT * FROM myapp_person WHERE updated_at > :sql_last_value"  # SQL query
    use_column_value => true
    tracking_column => updated_at
    tracking_column_type => "timestamp"
    tags => ["database"]  # Tag events from the database
  }
}

# filter {
#   # Set the index name dynamically based on the tag
#   if "backend" in [tags] {
#     mutate {
#       add_field => { "[@metadata][index]" => "backend-logs-%{+YYYY.MM.dd}" }
#     }
#   } else if "database" in [tags] {
#     mutate {
#       add_field => { "[@metadata][index]" => "database-accounts" }
#     }
#   }
# }

output {
  if "backend" in [tags] {
    elasticsearch {
      hosts => ["https://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/config/certs/root-ca.pem"
      index => "backend-logs-%{+YYYY.MM.dd}"
    }
  }

  if "database" in [tags] {
    elasticsearch {
      hosts => ["https://elasticsearch:9200"]
      user => "elastic"
      password => "${ELASTIC_PASSWORD}"
      ssl => true
      ssl_certificate_verification => true
      cacert => "/usr/share/logstash/config/certs/root-ca.pem"
      index => "database-accounts"
      document_id => "%{id}"
      document_type => "_doc"
    }
  }

  stdout {
    codec => rubydebug {
      metadata => true
    }
  } # for debug
}