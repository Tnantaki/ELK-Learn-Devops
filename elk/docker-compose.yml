services:
  setup_elk:
    build:
      context: ./setup
    image: setup_elk
    container_name: setup_elk
    volumes:
      - ./certs:/certs

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      node.name: elasticsearch
      discovery.type: single-node # using for single node
      ES_JAVA_OPTS: -Xms512m -Xmx512m # set JVM heap size for reduce momory usage
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?error} # define password
      # xpack.security.enabled: true # authetication username is elastic
      # xpack.security.http.ssl.enabled: true
      # xpack.security.http.ssl.key: certs/elasticsearch-key.pem
      # xpack.security.http.ssl.certificate: certs/elasticsearch.pem
      # xpack.security.http.ssl.certificate_authorities: certs/root-ca.pem
    mem_limit: ${MEM_LIMIT}
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    depends_on:
      - setup_elk
    # networks:
    #   - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    container_name: logstash
    environment:
      ELASTIC_PASSWORD:
    # command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    volumes:
      - ./certs:/usr/share/logstash/config/certs
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      # - ./logstash/pipeline:/usr/share/logstash/pipeline
      # - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      # - ./logstash/ingest_data/:/usr/share/logstash/ingestdata/
    mem_limit: ${MEM_LIMIT}
    ports:
      - 5044:5044
    # networks:
    #   - elastic
    #   - backend
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?error} 
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_PASSWORD?:error}
      KIBANA_ENCRYPTION_KEY: ${KIBANA_ENCRYPTION_KEY?:error}
    mem_limit: ${MEM_LIMIT}
    ports:
      - 5601:5601
    volumes:
      - ./certs:/usr/share/kibana/config/certs
      - ./kibana/init-kibana.sh:/usr/share/kibana/init-kibana.sh
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    entrypoint: ["/usr/share/kibana/init-kibana.sh"]
    # networks:
    #   - elastic
    depends_on:
      - elasticsearch

volumes:
  esdata:
    driver: local
#   lstdata:
#     driver: local

# networks:
#   backend:
#     driver: bridge
#   elastic:
#     driver: bridge
